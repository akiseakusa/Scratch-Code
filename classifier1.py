# -*- coding: utf-8 -*-
"""Classifier1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KEXZMl6vi_2KFH1Gqk9ICeLv-pwWY1Of
"""

class LogisticRegression:
  def __init__(self, learning_rate=0.001):
        self.learning_rate = learning_rate
        self.weights = None
        self.bias = None

  def fit(self, X, y, epochs=100):
        entries, features = X.shape

        self.weights = np.zeros(features)
        self.bias = 0


        for _ in range(epochs):

            linear_model = np.dot(X, self.weights) + self.bias
            # apply sigmoid function
            y_predicted = self._sigmoid(linear_model)
            if len(X)==0 :
              i=epochs
              continue
            diff_weights = -(2/len(X))*(X.T.dot(y_predicted-y))
            diff_bias = -(2/len(X))*np.sum(y_predicted-y)

            self.weights = self.weights - self.learning_rate * diff_weights
            self.bias = self.bias - self.learning_rate * diff_bias


  def predict(self, X):
      linear_model = np.dot(X, self.weights) + self.bias
      y_predicted = self._sigmoid(linear_model)
      y_predicted_cls = [1 if i > 0.5 else 0 for i in y_predicted]
      return np.array(y_predicted_cls)

  def _sigmoid(self, x):
      return 1 / (1 + np.exp(-x))

  def accuracy(self,y_true, y_pred):
        accuracy = np.sum(y_true == y_pred) / len(y_true)
        return accuracy

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split

import joblib

iris = load_iris()
X = iris.data
y = iris.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size= 0.1)
model = LogisticRegression(0.001)
joblib.dump(model,'model_logistic_regression')
#loading the Model
logistic_reg = joblib.load('model_logistic_regression')
logistic_reg.fit(X_train, y_train)
y_pred = logistic_reg.predict(X_test)

accuracy = logistic_reg.accuracy(y_test, y_pred)
print("Logistic Regression classification accuracy:", accuracy)